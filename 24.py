s = open('files/n24.txt').read()
n = len(s)
#0
d = [[-float('inf') for i in range(n)] for j in range(3)]
#1
if s[0]=='.': d[1][0] = 1
else: d[0][0] = 1
#2
for i in range(1,n):
    if s[i]=='.':
        d[1][i] = max(1,d[0][i-1]+1)
        d[2][i] = d[1][i-1]+1
    else:
        d[0][i] = max(1,d[0][i-1]+1)
        for j in range(1,3):
            d[j][i] = d[j][i-1]+1
#3
print(max([d[j][i] for j in range(3) for i in range(n)])) #403


# Динамическое программирование:

# 0. Определение: d[j][i] - максимальная длина цепочки с концом s[i] и количеством точек j
# 1. Стартовые значения: d[2][0] = -oo, если s[0]=., то d[1][0]=1, d[0][0] = -oo,
#     если s[0] != . , то d[1][0] = -oo, d[0][0] = 1
# 2. Шаг динамики: если s[i]=. , то d[0][i] = -oo, d[1][i] = max(d[0][i-1]+1,1), d[2][i] = d[1][i-1]+1
#                 если s[i]!=. , то d[0][i] = max(1,d[0][i-1]+1), d[j][i] = d[j][i-1]+1 для j in [1,2]
# 3. Ответ: max(d[j][i])